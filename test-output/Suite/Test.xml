<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="14" hostname="LMC-LT-077" failures="3" tests="10" name="Test" time="25.701" errors="0" timestamp="2022-08-05T14:33:07 IST">
  <testcase classname="com.mystore.testcases.IndexPageTest" name="@BeforeMethod setup" time="-1.659690187043E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @BeforeMethod annotated setup.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @BeforeMethod annotated setup.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.mystore.testcases.IndexPageTest" name="@AfterMethod teardown" time="-1.659690187056E9">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="com.mystore.testcases.IndexPageTest" name="@BeforeMethod setup" time="-1.659690187058E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.mystore.testcases.IndexPageTest" name="@AfterMethod teardown" time="-1.659690187067E9">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="com.mystore.testcases.HomePageTest" name="@BeforeMethod setup" time="-1.659690187075E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @BeforeMethod annotated setup.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @BeforeMethod annotated setup.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.mystore.testcases.HomePageTest" name="@AfterMethod teardown" time="-1.659690187084E9">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="com.mystore.testcases.HomePageTest" name="@BeforeMethod setup" time="-1.659690187086E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.mystore.testcases.HomePageTest" name="@AfterMethod teardown" time="-1.659690187093E9">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="com.mystore.testcases.OrderPageTest" name="@BeforeMethod setup" time="-1.659690187224E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @BeforeMethod annotated setup.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @BeforeMethod annotated setup.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.mystore.testcases.OrderPageTest" name="@AfterMethod tearDown" time="-1.659690187227E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.mystore.testcases.AddToCartPageTest" name="@BeforeMethod setup" time="-1.659690187291E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @BeforeMethod annotated setup.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @BeforeMethod annotated setup.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.mystore.testcases.AddToCartPageTest" name="@AfterMethod tearDown" time="-1.659690187299E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.mystore.testcases.LoginPageTest" name="loginTest" time="14.469"/>
  <testcase classname="com.mystore.testcases.EndToEndTest" name="endToEndTest" time="0.0">
    <failure type="org.testng.TestNGException" message="
Method public void com.mystore.testcases.EndToEndTest.endToEndTest(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Throwable requires a @DataProvider named : getProduct in class org.testng.annotations.DataProvider">
      <![CDATA[org.testng.TestNGException: 
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- endToEndTest -->
  <testcase classname="com.mystore.testcases.AccountCreationPageTest" name="verifyCreateAccountPageTest" time="0.0">
    <failure type="org.testng.TestNGException" message="
Cannot inject @Test annotated Method [verifyCreateAccountPageTest] with [class java.lang.String].
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Cannot inject @Test annotated Method [verifyCreateAccountPageTest] with [class java.lang.String].
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 26 stack frames]]>
    </failure>
  </testcase> <!-- verifyCreateAccountPageTest -->
  <testcase classname="com.mystore.testcases.IndexPageTest" name="loginpage" time="0.0">
    <skipped/>
  </testcase> <!-- loginpage -->
  <testcase classname="com.mystore.testcases.IndexPageTest" name="verifyLogo" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogo -->
  <testcase classname="com.mystore.testcases.SearchResultPageTest" name="productAvailabilityTest" time="0.0">
    <failure type="org.testng.TestNGException" message="
Cannot inject @Test annotated Method [productAvailabilityTest] with [class java.lang.String].
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Cannot inject @Test annotated Method [productAvailabilityTest] with [class java.lang.String].
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 26 stack frames]]>
    </failure>
  </testcase> <!-- productAvailabilityTest -->
  <testcase classname="com.mystore.testcases.HomePageTest" name="WishListTest" time="0.0">
    <skipped/>
  </testcase> <!-- WishListTest -->
  <testcase classname="com.mystore.testcases.HomePageTest" name="orderHistoryandDetailsTest" time="0.0">
    <skipped/>
  </testcase> <!-- orderHistoryandDetailsTest -->
  <testcase classname="com.mystore.testcases.OrderPageTest" name="addToCartTest" time="0.0">
    <skipped/>
  </testcase> <!-- addToCartTest -->
  <testcase classname="com.mystore.testcases.AddToCartPageTest" name="addToCartTest" time="0.0">
    <skipped/>
  </testcase> <!-- addToCartTest -->
  <testcase classname="com.mystore.base.Baseclass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="com.mystore.base.Baseclass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="com.mystore.base.Baseclass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="com.mystore.base.Baseclass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="com.mystore.base.Baseclass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="com.mystore.base.Baseclass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="com.mystore.base.Baseclass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="com.mystore.base.Baseclass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.mystore.base.Baseclass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.mystore.base.Baseclass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.mystore.base.Baseclass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.mystore.base.Baseclass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.mystore.base.Baseclass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.mystore.base.Baseclass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
</testsuite> <!-- Test -->
